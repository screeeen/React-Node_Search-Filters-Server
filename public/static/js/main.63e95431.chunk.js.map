{"version":3,"sources":["components/Header.js","components/FilterLocationField.js","components/FilterShowAndHideButton.js","components/FilterRoomsNumber.js","components/CardAppartment.js","components/CardsContainer.js","components/FilterPriceInput.js","components/FilterSizeInput.js","service/Calls.js","components/AppCanvas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Image","src","alt","FilterLocationField","handleChange","event","value","target","setState","location","liftLocationState","props","setLocation","state","latitude","longitude","query","Form","onSubmit","this","handleFormSubmit","InputGroup","size","FormControl","id","placeholder","aria-label","aria-describedby","onChange","Append","Text","icon","faSearch","Component","FilterShowAndHideButton","handleClick","showFilters","displayFilters","Row","Button","onClick","aria-controls","aria-expanded","faChevronUp","faChevronDown","FilterRoomsNumber","integerVal","parseInt","setRoomsNumber","Col","ButtonToolbar","ToggleButtonGroup","type","defaultValue","name","ToggleButton","CardApartment","picURL","Date","getTime","price","sqm","faCheck","faBed","numberOfBedrooms","faBath","numberOfBathrooms","CardsContainer","displayApartmentsSearch","apartmentsToDisplay","slice","reverse","map","oneApartment","i","key","FilterPriceInput","formatPrice","setPriceMin","setPriceMax","tens","25","50","75","100","Group","as","controlId","Control","FilterSizeInput","setSizeMin","setSizeMax","calls","axios","create","baseURL","withCredentials","priceMax","priceMin","sizeMax","sizeMin","roomsNumber","get","data","then","catch","err","console","log","AppCanvas","filtersButton","handleSubmit","preventDefault","search","apartmentList","apartmentsResult","getApartments","res","Collapse","in","App","Container","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63e95431.chunk.js","sourcesContent":["import React from 'react'\nimport { Image } from 'react-bootstrap'\n\n\nexport default function Header() {\n  return (\n    <div className=\"p-4\">\n      <Image src=\"https://cdn-v2.kasaz.com/assets/logo-227e0bab21561a77c0c3b1156a8f40c39cc4c6c85a769aa758e81a054c56089b.svg\" alt='pic' />\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Form, InputGroup, FormControl } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nclass FilterLocationField extends Component {\n  constructor() {\n    super();\n    this.state = {\n      location: '',\n      query: '',\n      latitude: 0,\n      longitude: 0\n    }\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({ location: value })\n  };\n\n  liftLocationState = () => {\n    this.props.setLocation(this.state.location,this.state.latitude,this.state.longitude);\n  }\n\n\n  render() {\n return (\n      <>\n        <Form onSubmit={this.handleFormSubmit}>\n          <InputGroup size=\"sm\">\n            <FormControl\n              id=\"autocomplete\"\n              placeholder=\"Ciudad o Barrio\"\n              aria-label=\"location\"\n              aria-describedby=\"basic-addon1\"\n              value={this.state.location}\n              onChange={this.handleChange}\n            />\n            <InputGroup.Append>\n              <InputGroup.Text>\n                <FontAwesomeIcon icon={faSearch} />\n              </InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form>\n      </>\n    )\n  }\n}\n\nexport default FilterLocationField;\n","import React, { Component } from 'react'\nimport { Button, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\nimport '../style/Styles.css'\n\n\nclass FilterShowAndHideButton extends Component {\n\n\n  handleClick = () => {\n    if (this.props.showFilters === true) {\n      this.props.displayFilters(false)\n    } else {\n      this.props.displayFilters(true)\n    }\n  }\n\n  render() {\n    return (\n      <Row>\n        <Button size=\"sm\" \n          className=\"btn_custom shadow-none\"\n          onClick={this.handleClick}\n          aria-controls=\"example-collapse-text\"\n          aria-expanded={this.props.showFilters}\n        >Filtros           {this.props.showFilters ? (\n              <FontAwesomeIcon className=\"search_filter_icon\" icon={faChevronUp} />\n            ) : (\n                <FontAwesomeIcon className=\"search_filter_icon\" icon={faChevronDown} />\n              )}</Button>\n\n\n      </Row>\n    )\n  }\n}\n\nexport default FilterShowAndHideButton;\n\n","import React, { Component } from 'react'\nimport { Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\n\n\nclass FilterRoomsNumber extends Component {\n\n  handleChange = event => {\n    const { value } = event.target;\n    const integerVal = parseInt(value);\n    this.props.setRoomsNumber(integerVal);\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Row>\n            <h6 className=\"m-auto\">HABITACIONES</h6>\n          </Row>\n          <Row>\n            <Col>\n              <ButtonToolbar onChange={this.handleChange}>\n                <ToggleButtonGroup className=\"m-auto p-4\" type=\"radio\" defaultValue={0} name=\"options\">\n                  <ToggleButton value={0}>Todos</ToggleButton>\n                  <ToggleButton value={1}>1+</ToggleButton>\n                  <ToggleButton value={2}>2+</ToggleButton>\n                  <ToggleButton value={3}>3+</ToggleButton>\n                  <ToggleButton value={4}>4+</ToggleButton>\n                  <ToggleButton value={5}>5+</ToggleButton>\n                </ToggleButtonGroup>\n              </ButtonToolbar>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default FilterRoomsNumber;\n\n\n\n\n","import React, { Component } from 'react'\nimport { Row } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faBed, faBath } from '@fortawesome/free-solid-svg-icons'\n\nclass CardApartment extends Component {\n\n  render() {\n    const picURL = `https://picsum.photos/200/300/?random&t=` + new Date().getTime() + `)`;\n\n    return (\n      <div>\n        <div className=\"listing_card card\">\n          <img className=\"listing_card_image_container\" src={picURL} alt=\"apartment pic\" />\n          <Row>\n            <div className=\"listing_card_location_names_and_prices pl-3\">\n              <div className=\"listing_card_location_names\">{this.props.location}</div>\n              <div className=\"listing_card_price\" >{this.props.price}€</div>\n              <div className=\"listing_card_price_per_square_meter\">{this.props.sqm}€/m²</div>\n              <div className=\"listing_card_map\" >\n                {/* <MapContainer latitude={this.props.latitude} longitude={this.props.longitude} location ={this.props.location}/> */}\n              </div>\n            </div>\n          </Row>\n        </div >\n        <div className=\"listing_card_details\">\n          <FontAwesomeIcon icon={faCheck} />\n          <div className=\"listing_card_price_per_square_meter\">{this.props.sqm}m²</div>\n          <FontAwesomeIcon icon={faBed} />\n          <div className=\"bedrooms\">{this.props.numberOfBedrooms} rooms</div>\n          <FontAwesomeIcon icon={faBath} />\n          <div className=\"badrooms\">{this.props.numberOfBathrooms} bathrooms</div>\n        </div>\n        <div className=\"listing_card_title_and_agency\">\n          <div className=\"listing_card_title listing_card_title_full_width\">{this.props.name}</div>\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default CardApartment;","import React, { Component } from 'react'\nimport CardApartment from './CardAppartment'\n\nclass CardsContainer extends Component {\n\n  displayApartmentsSearch = () => {\n    return this.props.apartmentsToDisplay.slice(0).slice(0).reverse().map((oneApartment, i) => {\n      const { location,latitude, longitude,name, price, sqm, numberOfBedrooms, numberOfBathrooms } = oneApartment;\n      return (\n        <CardApartment\n          key={i}\n          location={location}\n          latitude = {latitude}\n          longitude = {longitude}\n          name={name}\n          price={price}\n          sqm={sqm}\n          numberOfBedrooms={numberOfBedrooms}\n          numberOfBathrooms={numberOfBathrooms}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <>\n        {this.displayApartmentsSearch()}\n      </>\n    )\n  }\n}\n\nexport default CardsContainer;","import React, { Component } from 'react'\nimport { Form, Col, Row } from 'react-bootstrap'\n\nclass FilterPriceInput extends Component {\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    const integerVal = this.formatPrice(parseInt(value));\n\n    name === 'priceMin' ? this.props.setPriceMin(integerVal) : this.props.setPriceMax(integerVal);\n  };\n\n  formatPrice(tens){\n    const amount = {\n      25 : () => 25000,\n      50 : () => 50000,\n      75 : () => 75000,\n      100 : () => 100000\n    }\n    return (amount[tens])();\n  };\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col>\n            <Row>\n              <h6 className=\"m-auto p-2\">PRECIO</h6>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group as={Col} controlId=\"min-price\" onChange={this.handleChange}>\n                  <Form.Control as=\"select\" name=\"priceMin\">\n                    <option>precio mínimo</option>\n                    <option>25.000€</option>\n                    <option>50.000€</option>\n                    <option>75.000€</option>\n                    <option>100.000€</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <p> - </p>\n              <Col>\n                <Form.Group as={Col} controlId=\"max-price\" onChange={this.handleChange}>\n                  <Form.Control as=\"select\" name=\"priceMax\">\n                    <option>precio máximo</option>\n                    <option>25.000€</option>\n                    <option>50.000€</option>\n                    <option>75.000€</option>\n                    <option>100.000€</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\nexport default FilterPriceInput;","import React, { Component } from 'react'\nimport { Form, Col, Row } from 'react-bootstrap'\n\nclass FilterSizeInput extends Component {\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    const integerVal = parseInt(value);\n    name ==='sizeMin' ? this.props.setSizeMin(integerVal) : this.props.setSizeMax(integerVal);\n  };\n\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col>\n            <Row>\n              <h6 className=\"m-auto p-2\">TAMAÑO</h6>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group as={Col} controlId=\"min-size\" onChange={this.handleChange}>\n                  <Form.Control as=\"select\" name=\"sizeMin\">\n                    <option>Tamaño Mínimo</option>\n                    <option>5m²</option>\n                    <option>20m²</option>\n                    <option>50m²</option>\n                    <option>150m²</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <p> - </p>\n              <Col>\n                <Form.Group as={Col} controlId=\"max-size\" onChange={this.handleChange}>\n                  <Form.Control as=\"select\" name=\"sizeMax\">\n                    <option>Tamaño Máximo</option>\n                    <option>5m²</option>\n                    <option>20m²</option>\n                    <option>50m²</option>\n                    <option>150m²</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\nexport default FilterSizeInput;\n","// HTTP request service\n\nimport axios from \"axios\";\n\n\nclass Calls {\n  constructor() {\n    this.calls = axios.create({\n      baseURL: \"http://localhost:5000\",\n      // baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n  }\n\n  // apartments\n  async search(query) {\n    const { location, priceMax, priceMin, sizeMax, sizeMin, roomsNumber } = query;\n    const { data } = await this.calls\n      .get(`/api/search?location=${location}&priceMin=${priceMin}&priceMax=${priceMax}&sizeMin=${sizeMin}&sizeMax=${sizeMax}&roomsNumber=${roomsNumber}`)\n    return data;\n  }\n\n  async getApartments() {\n    return this.calls.get('/api/apartments')\n      .then((data) => data)\n      .catch((err) => console.log(err))\n  }\n}\n\nconst calls = new Calls();\nexport default calls;\n","import React, { Component } from 'react'\nimport { Col, Row, Form, Button, Collapse } from 'react-bootstrap'\nimport FilterLocationField from './FilterLocationField'\nimport FilterShowAndHideButton from './FilterShowAndHideButton'\nimport FilterRoomsNumber from './FilterRoomsNumber'\nimport CardsContainer from './CardsContainer'\nimport FilterPriceInput from './FilterPriceInput'\nimport FilterSizeInput from './FilterSizeInput'\nimport calls from '../service/Calls'\nimport '../style/Styles.css'\n\nclass AppCanvas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showFilters: false,\n      priceMax: 10000000,\n      priceMin: 0,\n      sizeMax: 100000000,\n      sizeMin: 0,\n      roomsNumber: 0,\n      location: '',\n      latitude: 0,\n      longitude: 0,\n      apartmentsResult: []\n    }\n  }\n\n  componentDidMount() {\n    calls.getApartments()\n      .then(res => {\n        const apartmentList = res.data;\n        this.setState({ apartmentsResult: apartmentList })\n      })\n  }\n\n  filtersButton = () => {\n    if (this.state.showFilters === true) {\n      this.setState({ showFilters: false })\n    } else {\n      this.setState({ showFilters: true })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const query = {\n      location: this.state.location,\n      priceMax: this.state.priceMax,\n      priceMin: this.state.priceMin,\n      sizeMax: this.state.sizeMax,\n      sizeMin: this.state.sizeMin,\n      roomsNumber: this.state.roomsNumber\n    }\n\n    calls.search(query)\n      .then((apartmentList) => {\n        console.log('data pack', apartmentList);\n        this.setState({ apartmentsResult: apartmentList });\n      })\n  }\n\n\n  render() {\n    return (\n      <>\n        <div className=\"search_filters_container\">\n          <Row className=\"pt-2 pb-2 pl-3\">\n            {/* LOCATION */}\n            <Col className=\" col-9\">\n              <FilterLocationField\n                location={this.state.location}\n                setLocation={(location,latitude,longitude) => this.setState({ location,latitude,longitude })} />\n            </Col>\n            {/* FILTERS COLLAPSABLE */}\n            <Col className=\"col-2\">\n              <FilterShowAndHideButton\n                showFilters={this.state.showFilters}\n                displayFilters={(showFilters) => this.setState({ showFilters })} />\n            </Col>\n          </Row>\n        </div>\n        {/* FILTERS */}\n        <Collapse in={this.state.showFilters}>\n          <Form onSubmit={this.handleSubmit}>\n\n            <div id=\"example-collapse-text\">\n              <FilterPriceInput\n                priceMax={this.state.priceMax}\n                priceMin={this.state.priceMin}\n                setPriceMin={(priceMin) => this.setState({ priceMin })}\n                setPriceMax={(priceMax) => this.setState({ priceMax })}\n              />\n              <FilterSizeInput\n                sizeMax={this.state.sizeMax}\n                sizeMin={this.state.sizeMin}\n                setSizeMin={(sizeMin) => this.setState({ sizeMin })}\n                setSizeMax={(sizeMax) => this.setState({ sizeMax })}\n              />\n\n              <FilterRoomsNumber\n                roomsNumber={this.state.roomsNumber}\n                setRoomsNumber={(roomsNumber) => this.setState({ roomsNumber })}\n\n              />\n              <Row className=\" p-4\">\n                <Button size=\"sm\" className=\"btn_submit m-auto\" type=\"submit\">Ver Inmuebles</Button>\n              </Row>\n            </div>\n          </Form>\n        </Collapse>\n        <CardsContainer apartmentsToDisplay={this.state.apartmentsResult} />\n      </>\n    )\n  }\n}\n\nexport default AppCanvas;","import React from 'react';\nimport Header from './components/Header'\nimport AppCanvas from './components/AppCanvas'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap'\n\nfunction App() {\n  return (\n    <Container className=\"m-0 p-0\">\n      <Header />\n      <AppCanvas />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}